name: Run Selenium Automated Tests

on: 
  workflow_dispatch

jobs:
  docker:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Start Containers
      run: docker-compose -f "docker-compose.yml" up --build --exit-code-from tests

    - name: Stop Containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: ./allure-results
        retention-days: 3

    - name: Upload Performance Results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: ./performance-results
        retention-days: 3

    - name: Save History and Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 30

    - name: Deploy Allure Report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GH_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history

  commit_results:
    runs-on: ubuntu-latest
    name: Save Performance Metrics
    if: always()
    needs: [docker]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: main
      - uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: performance-metrics/
      - uses: fregante/setup-git-user@v2
      - run: |
          git config user.name github-actions
          git config user.email ${{ github.event.sender.email }}
          git pull
          git add "**/metrics_*.json"
          git commit -m "Automated commit"
          git push

  analyze_results:
    runs-on: ubuntu-latest
    name: Generate Performance Report
    if: always()
    needs: [commit_results]
    steps:
      - run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r performance-analysis/requirements.txt
      - name: Run Comparative Analysis Script
        run: >
          python performance-analysis/performance_analysis.py
          performance-metrics
          'next.4zida.rs'
          'https://next.4zida.rs'
          5
          'https://github.com/...'
        shell: sh
      - uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: './next.4zida.rs - Performance Results ${{ env.NOW }}.pdf'
